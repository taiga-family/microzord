name: CI

env:
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}
  CYPRESS_INSTALL_BINARY: 0

on:
  pull_request:
  push:
    branches: [main, alpha]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - uses: taiga-family/ci/actions/setup/node@v1.51.2
      - run: npm run build
        env:
          NODE_OPTIONS: --openssl-legacy-provider

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - uses: taiga-family/ci/actions/setup/node@v1.51.2
      - run: npm run lint
      - run: npm run prettier -- --check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - uses: taiga-family/ci/actions/setup/node@v1.51.2
      - run: npm run test --coverage --coverageReporters lcov
      - run: echo "::set-output name=projectMatrix::$(npx nx print-affected --target test --select tasks.target.project)"
        id: set-project-matrix
      - uses: actions/github-script@v7
        id: parsed-project-matrix
        env:
          PROJECTS: '${{ steps.set-project-matrix.outputs.projectMatrix }}'
        with:
          script: |
            return process.env.PROJECTS.split(',').map(p => './coverage/' + p.trim() + '/lcov.info').join(',');
      - uses: codecov/codecov-action@v4
        with:
          files: ${{ steps.parsed-project-matrix.outputs.result }}

concurrency:
  group: ci-${{ github.head_ref }}
  cancel-in-progress: true
